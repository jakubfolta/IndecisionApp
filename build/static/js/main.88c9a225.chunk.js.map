{"version":3,"sources":["components/AddOption.js","components/Action.js","components/Header.js","components/Option.js","components/Options.js","components/OptionModal.js","components/IndecisionApp.js","index.js"],"names":["AddOption","state","error","undefined","handleAddOption","e","preventDefault","option","target","elements","value","trim","props","setState","this","className","onSubmit","type","name","React","Component","Action","onClick","handlePick","disabled","hasOptions","Header","title","subtitle","defaultProps","Option","count","optionText","handleDeleteOption","Options","handleDeleteOptions","options","length","map","index","key","OptionModal","isOpen","selectedOption","onRequestClose","handleClearSelectedOption","contentLabel","closeTimeoutMS","IndecisionApp","optionToRemove","prevState","filter","randomNum","Math","floor","random","indexOf","concat","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88c9a225.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class AddOption extends React.Component {\n  state = {\n    error: undefined\n  };\n  handleAddOption = (e) => {\n    e.preventDefault();\n    const option = e.target.elements.option.value.trim();\n    const error = this.props.handleAddOption(option);\n\n    this.setState(() => ({ error }));\n\n    if (!error) {\n      e.target.elements.option.value = '';\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.state.error && <p className=\"add-option-error\">{this.state.error}</p>}\n        <form className=\"add-option\" onSubmit={this.handleAddOption}>\n          <input className=\"add-option__input\" type=\"text\" name=\"option\" />\n          <button className=\"button\">Add Option</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Action = (props) => (\n  <div>\n    <button\n      className=\"big-button\"\n      onClick={props.handlePick}\n      disabled={!props.hasOptions}\n    >\n      What should I do?\n      </button>\n  </div>\n);\n\nexport default Action;\n","import React from 'react';\n\nconst Header = (props) => (\n  <div className=\"header\">\n    <div className=\"container\">\n      <h1 className=\"header__title\">{props.title}</h1>\n      {props.subtitle && <h2 className=\"header__subtitle\">{props.subtitle}</h2>}\n    </div>\n  </div>\n);\n\nHeader.defaultProps = {\n  title: 'Indecision'\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Option = (props) => (\n  <div className=\"option\">\n    <p className=\"option__text\">{props.count}. {props.optionText}</p>\n    <button\n      className=\"button button--link\"\n      onClick={(e) => {\n        props.handleDeleteOption(props.optionText);\n      }}\n    >\n      remove\n      </button>\n  </div>\n);\n\nexport default Option;\n","import React from 'react';\nimport Option from './Option';\n\nconst Options = (props) => (\n  <div>\n    <div className=\"widget-header\">\n      <h3 className=\"widget-header__title\">Your Options</h3>\n      <button\n        className=\"button button--link\"\n        onClick={props.handleDeleteOptions}\n      >\n        Remove All\n    </button>\n    </div>\n\n    {props.options.length === 0 && <p className=\"widget__message\">Please add an option to get started!</p>}\n    {\n      props.options.map((option, index) => (\n        <Option\n          key={option}\n          optionText={option}\n          count={index + 1}\n          handleDeleteOption={props.handleDeleteOption}\n        />\n      ))\n    }\n  </div>\n);\n\nexport default Options;\n","import React from 'react';\nimport Modal from 'react-modal';\n\nconst OptionModal = (props) => (\n  <Modal\n    isOpen={!!props.selectedOption}\n    onRequestClose={props.handleClearSelectedOption}\n    contentLabel=\"Selected Option\"\n    closeTimeoutMS={200}\n    className=\"modal\"\n  >\n    <h3 className=\"modal__title\">Selected Option</h3>\n    {props.selectedOption && <p className=\"modal__body\">{props.selectedOption}</p>}\n    <button className=\"button\" onClick={props.handleClearSelectedOption}>Okay</button>\n  </Modal>\n);\n\nexport default OptionModal;\n","import React from 'react';\nimport AddOption from './AddOption';\nimport Action from './Action';\nimport Header from './Header';\nimport Options from './Options';\nimport OptionModal from './OptionModal';\n\nexport default class IndecisionApp extends React.Component {\n  state = {\n    options: [],\n    selectedOption: undefined\n  };\n  handleDeleteOptions = () => {\n    this.setState(() => ({ options: [] }));\n  };\n  handleClearSelectedOption = () => {\n    this.setState(() => ({ selectedOption: undefined }));\n  }\n  handleDeleteOption = (optionToRemove) => {\n    this.setState((prevState) => ({\n      options: prevState.options.filter((option) => optionToRemove !== option)\n    }));\n  };\n  handlePick = () => {\n    const randomNum = Math.floor(Math.random() * this.state.options.length);\n    const option = this.state.options[randomNum];\n    this.setState(() => ({\n      selectedOption: option\n    }));\n  };\n  handleAddOption = (option) => {\n    if (!option) {\n      return 'Enter valid value to add item';\n    } else if (this.state.options.indexOf(option) > -1) {\n      return 'This option already exists';\n    }\n\n    this.setState((prevState) => ({\n      options: prevState.options.concat(option)\n    }));\n  };\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem('options');\n      const options = JSON.parse(json);\n\n      if (options) {\n        this.setState(() => ({ options }));\n      }\n    } catch (e) {\n      // Do nothing at all\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options.length !== this.state.options.length) {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem('options', json);\n    }\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n  render() {\n    const subtitle = 'Put your life in the hands of a computer';\n\n    return (\n      <div>\n        <Header subtitle={subtitle} />\n        <div className=\"container\">\n          <Action\n            hasOptions={this.state.options.length > 0}\n            handlePick={this.handlePick}\n          />\n          <div className=\"widget\">\n            <Options\n              options={this.state.options}\n              handleDeleteOptions={this.handleDeleteOptions}\n              handleDeleteOption={this.handleDeleteOption}\n            />\n            <AddOption\n              handleAddOption={this.handleAddOption}\n            />\n          </div>\n        </div>\n        <OptionModal\n          selectedOption={this.state.selectedOption}\n          handleClearSelectedOption={this.handleClearSelectedOption}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport IndecisionApp from './components/IndecisionApp';\nimport 'normalize.css/normalize.css';\nimport './styles/styles.scss';\n\nReactDOM.render(<IndecisionApp />, document.getElementById('app'));\n"],"sourceRoot":""}